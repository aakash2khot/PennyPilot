pipeline{
    agent any
    tools {nodejs "nodejs"}
    environment {
        CI = 'true'
        registryfrontend = 'ashkt/pennypilot-frontend'
        registrybackend = 'ashkt/pennypilot-backend'
        // DOCKERHUB_CRED = credentials('CRED_DOCKER')
        registryCredential = 'DockerHubCred'
        dockerimage = ''
    }
    
    stages{
        stage('Stage 1: Git Clone'){
            steps{
                git url:'https://github.com/aakash2khot/PennyPilot.git',
                branch: 'main'
                // credentialsId: 'Credential_Git'
            }
        }
        stage("Running  Tests"){
            steps{
                script{
                dir('backend') {
                    sh 'npm install'
                    sh 'npm run test'
                }
                }
                
            }
        }
        stage('Build Frontend Docker Image') {
            environment {
                IMAGE_NAME = ''
            }
            steps {
                script{
                dir('frontend') {
                    dockerimage = sh '/usr/local/bin/docker build -t '+registryfrontend+':latest .'
                }
            }
        }
        }
        stage('Build Backend Docker Image') {
            steps {
                script{
                dir('backend') {
                    dockerimage = sh '/usr/local/bin/docker build -t '+registrybackend+':latest .'
        } }
        } 
        }
        stage('Push Frontend Image to dockerHub') {
            steps {
                script{
                dir('frontend') {
                    sh '/usr/local/bin/docker login -u "ashkt" -p "ppp"'
                    sh '/usr/local/bin/docker push ' +registryfrontend+':latest'
                }
            } }
        }
        stage('Push Backend Image to dockerHub') {
            steps {
                script{
                dir('backend') {
                    sh '/usr/local/bin/docker login -u "ashkt" -p "ppp"'
                    sh '/usr/local/bin/docker push ' +registrybackend+':latest'
                } 
            } } 
        }
        stage('Clean docker images'){
        steps{
            script{
                sh '/usr/local/bin/docker container prune -f'
                sh '/usr/local/bin/docker image prune -f'
               }
           }  
        }
        stage('Deploy') {
        steps {

            sh '/Users/aakashkhot/Library/Python/3.12/bin/ansible-playbook playbook.yml -i inventory'
        }
        }
    }
}